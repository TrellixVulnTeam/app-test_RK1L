{"remainingRequest":"/home/vkit3/WebstormProjects/vue-test/node_modules/babel-loader/lib/index.js!/home/vkit3/WebstormProjects/vue-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vkit3/WebstormProjects/vue-test/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/vkit3/WebstormProjects/vue-test/src/views/Login.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/vkit3/WebstormProjects/vue-test/src/views/Login.vue","mtime":1622589832848},{"path":"/home/vkit3/WebstormProjects/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vkit3/WebstormProjects/vue-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vkit3/WebstormProjects/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vkit3/WebstormProjects/vue-test/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgTE9HSU4gfSBmcm9tICJAL3N0b3JlL2FjdGlvbnMudHlwZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVnRMb2dpbiIsCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlbWFpbDogbnVsbCwKICAgICAgcGFzc3dvcmQ6IG51bGwKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgb25TdWJtaXQoZW1haWwsIHBhc3N3b3JkKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKExPR0lOLCB7CiAgICAgICAgZW1haWwsCiAgICAgICAgcGFzc3dvcmQKICAgICAgfSkudGhlbigoKSA9PiB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogImhvbWUiCiAgICAgIH0pKTsKICAgIH0sCgogICAgZXJyb3JGaWx0ZXIoZXJyb3JWYWx1ZSkgewogICAgICByZXR1cm4gYCR7ZXJyb3JWYWx1ZVswXX1gOwogICAgfQoKICB9LAogIGNvbXB1dGVkOiB7IC4uLm1hcFN0YXRlKHsKICAgICAgZXJyb3JzOiBzdGF0ZSA9PiBzdGF0ZS5hdXRoLmVycm9ycwogICAgfSkKICB9Cn07"},{"version":3,"sources":["/home/vkit3/WebstormProjects/vue-test/src/views/Login.vue"],"names":[],"mappings":"AA4CA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,KAAT,QAAsB,sBAAtB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;;AAEb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,KAAK,EAAE,IADF;AAEL,MAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAPY;;AAQb,EAAA,OAAO,EAAE;AACP,IAAA,QAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB;AACxB,WAAK,MAAL,CACG,QADH,CACY,KADZ,EACmB;AAAE,QAAA,KAAF;AAAS,QAAA;AAAT,OADnB,EAEG,IAFH,CAEQ,MAAM,KAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,QAAA,IAAI,EAAE;AAAR,OAAlB,CAFd;AAGD,KALM;;AAMP,IAAA,WAAW,CAAC,UAAD,EAAa;AACtB,aAAQ,GAAE,UAAU,CAAC,CAAD,CAAI,EAAxB;AACF;;AARO,GARI;AAkBb,EAAA,QAAQ,EAAE,EACR,GAAG,QAAQ,CAAC;AACV,MAAA,MAAM,EAAG,KAAD,IAAW,KAAK,CAAC,IAAN,CAAW;AADpB,KAAD;AADH;AAlBG,CAAf","sourcesContent":["<template>\n  <div class=\"auth-page\">\n    <div class=\"container page\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-3 col-xs-12\">\n          <h1 class=\"text-xs-center\">Sign in</h1>\n          <p class=\"text-xs-center\">\n            <router-link :to=\"{ name: 'register' }\">\n              Need an account?\n            </router-link>\n          </p>\n          <ul v-if=\"errors\" class=\"error-messages\">\n            <li v-for=\"(v, k) in errors\" :key=\"k\">\n              {{ k }} {{ errorFilter(v) }}\n            </li>\n          </ul>\n          <form @submit.prevent=\"onSubmit(email, password)\">\n            <fieldset class=\"form-group\">\n              <input\n                class=\"form-control form-control-lg\"\n                type=\"text\"\n                v-model=\"email\"\n                placeholder=\"Email\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                class=\"form-control form-control-lg\"\n                type=\"password\"\n                v-model=\"password\"\n                placeholder=\"Password\"\n              />\n            </fieldset>\n            <button class=\"btn btn-lg btn-primary pull-xs-right\">\n              Sign in\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { LOGIN } from \"@/store/actions.type\";\n\nexport default {\n  name: \"VtLogin\",\n  data() {\n    return {\n      email: null,\n      password: null\n    };\n  },\n  methods: {\n    onSubmit(email, password) {\n      this.$store\n        .dispatch(LOGIN, { email, password })\n        .then(() => this.$router.push({ name: \"home\" }));\n    },\n    errorFilter(errorValue) {\n      return `${errorValue[0]}`;\n    }\n  },\n  computed: {\n    ...mapState({\n      errors: (state) => state.auth.errors\n    })\n  }\n};\n</script>\n"],"sourceRoot":""}]}